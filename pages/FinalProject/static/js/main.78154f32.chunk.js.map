{"version":3,"sources":["firebase/firebase.utils.js","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-sign-up/sign-in-sign-up.component.jsx","components/navigation/navigation.component.jsx","constants/routes.js","pages/home/home.component.jsx","components/chat-item/chat-item.component.jsx","components/chat-container/chat-container.component.jsx","pages/chat/chat.component.jsx","components/add-post/add-post.component.jsx","components/post/post.component.jsx","pages/feed/feed.component.jsx","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUser","userAuth","additionalData","a","userReference","firestore","doc","uid","get","exists","displayName","email","photoURL","occupation","biography","creationDate","Date","set","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","SignIn","handleSubmit","e","preventDefault","state","password","signInWithEmailAndPassword","setState","handleChange","target","value","name","this","style","marginTop","padding","Grid","container","spacing","justify","item","Card","minHeight","CardContent","Typography","color","align","onSubmit","TextField","paddingBottom","label","variant","type","onChange","required","fullWidth","CardActions","ButtonGroup","aria-label","Button","onClick","React","Component","SignUp","props","handleSignUp","password1","password2","createUserWithEmailAndPassword","user","alert","SignInSignUpPage","className","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","title","avatar","margin","Nav","currentUser","classes","AppBar","position","Toolbar","to","signOut","Avatar","alt","src","HomePage","ChatItem","Paper","component","ChatContainer","onUserUpdate","querySnapshot","userList","forEach","data","timestamp","push","key","id","sort","onCollectionUpdate","list","group","currentReceiver","collection","add","now","ref","userRef","unsubscribe","unsubscribe2","orderBy","where","onSnapshot","event","innerText","componentDidMount","xs","map","handleUserSelect","bind","multiline","rows","onKeyPress","handleKeyPress","index","ChatPage","AddPost","settings","timestampsInSnapshots","content","messages","votes","messageList","Post","posts","i","length","currentPost","tempMsgs","update","like","dislike","Tooltip","IconButton","handleUpvote","handleRespond","FeedPage","App","unsubscribeFromSession","onAuthStateChanged","snapShotObj","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78154f32.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n/* Firebase project configuration */\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCvfesYxd9sVY9paS_Y1z6BaCtMYpMfHZE\",\n    authDomain: \"cs4830-final.firebaseapp.com\",\n    databaseURL: \"https://cs4830-final.firebaseio.com\",\n    projectId: \"cs4830-final\",\n    storageBucket: \"cs4830-final.appspot.com\",\n    messagingSenderId: \"1062419412597\",\n    appId: \"1:1062419412597:web:0f0e94afd9cf07da43ea3c\"\n};\n\n/* Initializing Firebase */\nfirebase.initializeApp(firebaseConfig);\n\n//Firestore returns two types of objs\n\n// query reference\n    // asking firestore for some document or collection\n    // obj that represents the 'current' place in the database in which you are querying\n// query snapshot\n    //\n// if nothing exists, an object will still be returned\nexport const createUser = async (userAuth, additionalData) => {\n    //if userAuth doesn't exist, exit\n    if (!userAuth) return;\n\n    //check firestore to see if user already exists\n    const userReference = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userReference.get();\n\n    if (!snapShot.exists) {\n        const { displayName, email, photoURL, occupation, biography } = userAuth;\n        const creationDate = new Date();\n\n        try {\n            await userReference.set({\n                displayName,\n                email,\n                photoURL,\n                creationDate,\n                occupation,\n                biography,\n                ...additionalData\n            })\n        } catch (err) {\n            console.log('error creating user', err.message);\n        }\n\n    }\n    return userReference;\n}\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\nimport './sign-in.styles.css';\n\nclass SignIn extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n\n\n    handleSubmit = async e => {\n        e.preventDefault();\n\n        const { email, password } = this.state;\n        console.log(this.state)\n\n        try {\n            await auth.signInWithEmailAndPassword(email, password);\n            this.setState({ email: '', password: '', });\n            console.log(email)\n        } catch (err) {\n            console.log(err);\n        }\n\n    }\n\n    handleChange = e => {\n        const { value, name } = e.target;\n        // console.log(e.target.value);\n        this.setState({ [name]: value });\n    }\n\n    render() {\n\n        const { email, password } = this.state;\n\n        return (\n            <div style={{ marginTop: 20, padding: 30 }}>\n                <Grid container spacing={10} justify='center'>\n                    <Grid item>\n                    <Card style={{ minHeight: 400 }}>\n                        <CardContent>\n                            <Typography color='textSecondary' align='center'>\n                                LOGIN\n                            </Typography>\n                            <br />\n\n                            <form onSubmit={this.handleSubmit}>\n                                <TextField\n                                    style={{\n                                        paddingBottom: 10\n                                    }}\n                                    label='Email'\n                                    variant='outlined'\n                                    color='primary'\n                                    name='email'\n                                    type='email'\n                                    onChange={this.handleChange}\n                                    value={email}\n                                    required\n                                    fullWidth\n                                />\n\n                                <TextField \n                                    style={{\n                                        paddingBottom: 10\n                                    }}\n                                    label='Password'\n                                    variant='outlined'\n                                    color='primary'\n                                    name='password'\n                                    type='password'\n                                    value={password}\n                                    onChange={this.handleChange}\n                                    required\n                                    fullWidth\n                                />\n                                \n                                <CardActions>\n                                <ButtonGroup fullWidth aria-label='full width outlined button group'>\n                                    <Button\n                                        variant='contained'\n                                        color='inherit'\n                                        type='submit'\n                                    >\n                                    Login\n                                    </Button>\n                                    <Button \n                                        variant='contained'\n                                        color='primary'\n                                        onClick={signInWithGoogle}\n                                    >\n                                    Sign In With Google\n                                    </Button>\n                                </ButtonGroup>\n                                \n                            </CardActions>\n                        \n                            </form>\n                        </CardContent>\n                            \n                            \n                        </Card>\n                    </Grid>\n                </Grid>\n                \n                \n            </div>\n        )\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { signInWithGoogle } from '../../firebase/firebase.utils';\nimport './sign-up.styles.css';\nimport { auth, createUser } from '../../firebase/firebase.utils';\n\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayName: '',\n            email: '',\n            password1: '',\n            password2: '',\n        }\n    }\n\n\n    handleSignUp = async e => {\n        e.preventDefault();\n\n        const { displayName, email, password1, password2, occupation, biography } = this.state;\n        \n        \n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(email, password1);\n            await createUser(user, { displayName, occupation, biography });\n            this.setState({ displayName: '', email: '', password1: '', password2: '', occupation: '', biography: '' });\n            // return <Redirect to={ROUTES.FEED} />;\n        } catch (err) {\n            //console.log(err);\n            alert(err);\n        }  \n    }\n\n    handleChange = e => {\n        const { value, name } = e.target;\n        // console.log(e.target.value);\n        this.setState({ [name]: value });\n    }\n\n    render() {\n\n        const { displayName, email, password1, password2 } = this.state;\n\n        return (\n            <div style={{ marginTop: 20, padding: 30 }}>\n                <Grid container spacing={10} justify='center'>\n                    <Grid item>\n                    <Card style={{ minHeight: 400 }}>\n                        <CardContent>\n                            <Typography color='textSecondary' align='center'>\n                                SIGN UP\n                            </Typography>\n                            <br />\n\n                            <form onSubmit={this.handleSignUp}>\n\n                                <TextField\n                                        label='Display Name'\n                                        variant='outlined'\n                                        color='primary'\n                                        name='displayName'\n                                        type='text'\n                                        value={displayName}\n                                        onChange={this.handleChange}\n                                        required\n                                        fullWidth\n                                        style={{\n                                            paddingBottom: 10\n                                        }}\n                                />\n                                <TextField\n                                    label='Email'\n                                    variant='outlined'\n                                    color='primary'\n                                    name='email'\n                                    type='email'\n                                    onChange={this.handleChange}\n                                    value={email}\n                                    required\n                                    fullWidth\n\n                                    style={{\n                                        paddingBottom: 10\n                                    }}\n                                />\n\n                                <TextField \n                                    style={{\n                                        paddingBottom: 10\n                                    }}\n                                    label='Password'\n                                    variant='outlined'\n                                    color='primary'\n                                    name='password1'\n                                    type='password'\n                                    value={password1}\n                                    onChange={this.handleChange}\n                                    required\n                                    fullWidth\n                                />\n\n                                <TextField\n                                    style={{\n                                        paddingBottom: 10\n                                    }}\n                                    label='Confirm Password'\n                                    variant='outlined'\n                                    color='primary'\n                                    name='password2'\n                                    type='password'\n                                    value={password2}\n                                    onChange={this.handleChange}\n                                    required\n                                    fullWidth\n                                />\n\n                                \n\n                                \n                                <CardActions>\n                                <ButtonGroup fullWidth aria-label='full width outlined button group'>\n                                    <Button\n                                        variant='contained'\n                                        color='inherit'\n                                        type='submit'\n                                    >\n                                    SIGN UP\n                                    </Button>\n                                    <Button \n                                        variant='contained'\n                                        color='primary'\n                                        onClick={signInWithGoogle}\n                                    >\n                                    JOIN WITH GOOGLE\n                                    </Button>\n                                </ButtonGroup>\n                                \n                            </CardActions>\n                        \n                            </form>\n                        </CardContent>\n                            \n                            \n                        </Card>\n                        {/* { this.state.error && <p>{this.state.error.message}</p>} */}\n                    </Grid>\n                </Grid>\n                \n                \n            </div>\n        )\n    }\n}\n\nexport default SignUp;","import React from 'react';\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\nimport './sign-in-sign-up.styles.css';\n\nconst SignInSignUpPage = () => {\n    return (\n        <div className='container'>\n            {/* <SimpleTabs /> */}\n\n            <div className='row'>\n                <div className='col s12 m6 l6'>\n                    <SignIn />\n                </div>\n                <div className='col s12 m6 l6'>\n                    <SignUp />\n                </div>\n            </div>\n            \n            \n\n                \n            \n                \n            \n            \n        </div>\n    )\n    \n}\n\nexport default SignInSignUpPage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\n//import Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\nimport { auth } from '../../firebase/firebase.utils';\nimport './navigation.styles.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport * as ROUTES from '../../constants/routes';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    avatar: {\n        margin: 10\n    }\n}));\n\nconst Nav = ({ currentUser }) => {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <AppBar position='static' style={{ margin: 0 }}>\n                <Toolbar>\n                    {\n                        currentUser \n                        ? \n                        <div>\n                            \n                            <Button color='inherit'><Link className='dec' to={ROUTES.FEED}>FEED</Link></Button>\n                            <Button color='inherit'><Link className='dec' to={ROUTES.CHAT}>CHAT</Link></Button>\n                            <Button color='inherit' onClick={() => auth.signOut()}><Link className='dec' to={ROUTES.HOME}>SIGN OUT</Link></Button>\n                            <Button color='inherit'>Hello, {currentUser.displayName}</Button>\n                            {\n                                currentUser.photoURL ? <Avatar alt={currentUser.displayName} src={currentUser.photoURL} className={classes.avatar}/> : <div></div> \n                            }\n                            \n                        </div> \n                        : \n                        <div>\n                            <Button color='inherit'><Link className='dec' to={ROUTES.HOME}>HOME</Link></Button>\n                            <Button color='inherit'><Link className='dec' to={ROUTES.SIGN_IN}>SIGN IN</Link></Button>\n                        </div>\n                    }\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default Nav;","export const HOME = '/';\nexport const SIGN_IN = '/signin';\nexport const FEED = '/feed';\nexport const CHAT = '/chat';","import React from 'react';\nimport './home.styles.css';\n\n\nconst HomePage = () => {\n    return (\n        <div>\n            <h1>Welcome to our Chat App!</h1>\n            <p>Make an account or sign in with Google to use the chat bruh</p>\n        </div>\n    )\n}\n\nexport default HomePage;","import React, {Component} from 'react';\nimport './chat-item.styles.css';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nexport default class ChatItem extends Component {\n  \n  render() {\n    //console.log(this.props)\n    //console.log(auth.currentUser)\n\n    return (\n      <div>\n\n        <Paper>\n          <Typography variant=\"h5\" component=\"h3\">\n            {this.props.message.displayName}\n          </Typography>\n          <Typography component=\"p\">\n            {this.props.message.message}\n          </Typography>\n        </Paper>\n        <br />\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './chat-container.styles.css';\nimport ChatItem from '../chat-item/chat-item.component';\nimport { firestore, auth } from '../../firebase/firebase.utils';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class ChatContainer extends Component {\n  constructor(props) {\n    super(props);    \n    // console.log('ChatContainer Constructor')\n    // console.log(props)\n    \n    this.state = {\n      currentUser: this.props.currentUser, \n      currentReceiver: '',\n      message: '',\n      list: [],\n      userList: []\n    };    \n\n    this.ref = firestore.collection('messages');\n    this.userRef = firestore.collection('users'); \n    this.unsubscribe = null;\n    this.unsubscribe2 = null;\n    //this.messageRef = firebase.database().ref().child('messages');\n    //this.handleSubmit\n  }  \n  \n  componentDidMount() {\n    this.unsubscribe = this.ref.orderBy('timestamp').where(\"group\",\"array-contains\",this.state.currentUser).onSnapshot(this.onCollectionUpdate); //.orderBy(\"timestamp\")\n    this.unsubscribe2 = this.userRef.orderBy(\"displayName\").onSnapshot(this.onUserUpdate);\n    // console.log(\"ChatContainer Mount\")\n    // console.log(this.props)\n  }\n\n  handleChange = e => {\n    //console.log(e)\n    this.setState({message: e.target.value});\n  }  \n\n  onUserUpdate = (querySnapshot) => {\n    const userList = [];\n    if (this.props.currentUser) {\n      this.setState({\n        currentUser: this.props.currentUser.displayName\n      });\n    }\n    //console.log(this.props.currentUser)\n    querySnapshot.forEach((doc) => {\n      const { message, timestamp, displayName } = doc.data();\n      if (displayName !== this.state.currentUser) {\n        // console.log(\"OVER HERE\")\n        // console.log(displayName, this.state.currentUser)\n        userList.push({\n          key: doc.id,\n          doc, // DocumentSnapshot\n          displayName //this.props.currentUser.displayName\n        });\n      }\n    });\n    userList.sort();\n    this.setState({\n      userList\n    });\n  }\n\n  handleUserSelect(event) {\n    event.preventDefault();\n    this.setState({ currentReceiver: event.target.innerText });\n    // this.state.currentReceiver = event.target.innerText;\n    // console.log(this.state.currentReceiver)\n    // console.log(\"LKSDlkJLKJDSLKfs\")\n    // console.log(this.state.list)\n    // const completeWaste = firestore.collection(\"messages\").doc(\"UyX1JmT3qvxqxO8YAV54\").update({\n    //     timestamp: Date.now()\n    // });\n    this.componentDidMount()\n }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const list = [];\n    console.log(\"Collection Update\")\n    if (this.props.currentUser) {\n      this.setState({\n        currentUser: this.props.currentUser.displayName\n      });\n    }\n    //console.log(this.props.currentUser)\n    console.log(this.state.currentUser)\n    \n    querySnapshot.forEach((doc) => {\n      const { message, timestamp, displayName, group } = doc.data();\n      \n      console.log(doc.id, \" => \", doc.data());\n      if (group[0] === this.state.currentReceiver || group[1] === this.state.currentReceiver) {\n        list.push({\n          key: doc.id,\n          doc, // DocumentSnapshot\n          message,\n          timestamp,\n          group,\n          displayName //this.props.currentUser.displayName\n        });\n      }\n    });\n    //this.sortList(list);\n    console.log(list)\n    this.setState({\n      list\n    });\n    \n   \n  }\n\n  sortList(list) {\n\n  }\n  \n  handleSubmit = e => {\n    const { message, currentUser } = this.state;\n    const displayName = '';\n    e.preventDefault();\n\n    console.log(\"Message submit\")\n    console.log(this.state)\n    const userRef = firestore.collection('messages').add({\n        message: message,\n        group: [this.state.currentUser, this.state.currentReceiver],\n        timestamp: Date.now() /1000 |0,\n        displayName: currentUser //auth.currentUser.displayName\n    });\n    \n    this.setState({ message: ''});\n  }  \n  \n  handleKeyPress(event) {\n    if (event.key !== 'Enter') return;\n    this.handleSubmit(event);\n  }  \n  \n  \n\n  render() {\n    \n    return (\n      \n      <div>\n\n        <Grid container spacing={4}>\n          <Grid item xs={12}>\n          <Typography>USERS</Typography>\n\n          { this.state.userList.map((item) =>\n              <button className='users' onClick={this.handleUserSelect.bind(this)}>\n                {item.displayName}\n              </button>\n            )}\n\n  \n            <br /> <br />\n            <form onSubmit={this.handleSubmit.bind(this)}>\n                <TextField \n                  multiline\n                  rows={8}\n                  variant='outlined'\n                  label='Type message' \n                  name='message' \n                  value={this.state.message} \n                  onChange={this.handleChange.bind(this)}\n                  type=\"text\"\n                  onKeyPress={this.handleKeyPress.bind(this)}\n                  fullWidth\n                  position='static'\n                  />\n                <Button type='submit' color='primary'>Send</Button>\n              </form>\n          </Grid>\n\n          <Grid item xs={12}>\n          { this.state.list.map((item, index, user) =>\n                <ChatItem key={index} message={item} />\n              )}\n          </Grid>\n        </Grid>\n        \n          \n\n           {/* { this.state.userList.map((item) =>\n                <div>\n                <Button variant=\"contained\" onClick={this.handleUserSelect.bind(this)} color=\"primary\">\n                  { item.displayName }\n                </Button>\n                </div>\n            )} */}\n\n            \n          \n\n          \n              \n            \n              {/* <input\n                className=\"form__input\"\n                type=\"text\"\n                placeholder=\"Type message\"\n                value={this.state.message}\n                onChange={this.handleChange.bind(this)}\n                onKeyPress={this.handleKeyPress.bind(this)}\n              />\n              <button\n                className=\"form__button\"\n                onClick={this.handleSubmit.bind(this)}\n              >\n                send\n              </button> */}\n              \n            \n        </div> \n        \n  \n    );\n  }\n}","import React from 'react';\n\nimport './chat.styles.css';\nimport ChatContainer from '../../components/chat-container/chat-container.component';\n\nconst ChatPage = ({ currentUser }) => {\n    console.log(\"Chat Page\")\n    console.log(currentUser)\n    return (\n        <div>\n            <ChatContainer currentUser={currentUser}/>\n        </div>\n    );\n};\n\nexport default ChatPage;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './add-post.styles.css';\n\nimport { firestore } from '../../firebase/firebase.utils';\n\nclass AddPost extends React.Component {\n\n    constructor() {\n        super();\n\n\n        this.state = {\n            message: '',\n            messageList: []\n        }\n    }\n\n\n    handleChange = e => {\n        const { value, name } = e.target;\n        // console.log(e.target.value);\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit = e => {\n        const { message } = this.state;\n        e.preventDefault();\n\n        firestore.settings({\n            timestampsInSnapshots: true\n        });\n\n        const userRef = firestore.collection('posts').add({\n            content: message,\n            messages: [],\n            votes: 0,\n        });\n        \n        this.setState({ message: ''});\n    }\n\n    render() {\n        return (\n            <div>\n                    {/* <Typography variant='p'>Please type below to make a post!</Typography> */}\n                    <form onSubmit={this.handleSubmit}>\n                        <TextField multiline rows={8} variant='outlined' label='Make a new post!' name='message' value={this.state.message} onChange={this.handleChange} fullWidth/>\n                        <Button type='submit' color='primary'>Send</Button>\n                    </form>\n                    \n                \n            </div>\n        )\n    }   \n}\n\n\nexport default AddPost;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { firestore } from '../../firebase/firebase.utils';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.ref = firestore.collection('posts');\n        this.unsubscribe = null;\n        // 'mIIaFEdsWz8qwXenoO8G';\n\n        this.state = {\n            posts: [],\n            like: null,\n            dislike: null,\n            message: '',\n            currentPost: '',\n            currentUser: 'N/A'\n        }\n\n        if (this.props.currentUser) {\n          this.state.currentUser = this.props.currentUser.displayName\n        }\n    }\n\n    onCollectionUpdate = (querySnapshot) => {\n        const posts = [];\n        querySnapshot.forEach((doc) => {\n          const { content, votes, messages } = doc.data();\n          posts.push({\n            key: doc.id,\n            doc, // DocumentSnapshot\n            content,\n            votes,\n            messages\n          });\n        });\n        this.setState({\n          posts\n       });\n    }\n\n    handleRespond(key) {\n      //console.log(key)\n      this.state.currentPost = key;\n      this.setState(this.state)\n    }\n\n    componentDidMount() {\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n    }\n\n    handleChange = e => {\n      const { value, name } = e.target;\n      // console.log(e.target.value);\n      this.setState({ [name]: value });\n      \n    }\n\n    handleUpvote(key) {\n      console.log(key)\n      for (var i = 0; i < this.state.posts.length; i++) {\n        if (this.state.posts[i].key == key) {\n          const votes = this.state.posts[i].votes + 1\n          const newRef = firestore.collection('posts').doc(key).update({\n            votes: votes\n          })\n          // console.log(newRef)\n          // console.log('newRef')\n        }\n      }\n      this.setState(this.state)\n    }\n\n    handleSubmit = e => {\n      const { message } = this.state;\n      e.preventDefault();\n      for (var i = 0; i < this.state.posts.length; i++) {\n        if (this.state.posts[i].key == this.state.currentPost) {\n          const tempMsgs = this.state.posts[i].messages\n          tempMsgs.push(this.state.currentUser + ': ' + message)\n          //console.log(tempMsgs)\n          const newRef = firestore.collection('posts').doc(this.state.currentPost).update({\n            messages: tempMsgs\n          })\n          // console.log(newRef)\n          // console.log('newRef')\n        }\n      }\n      //console.log(this.state.posts)\n      this.setState({ message: ''});\n    }\n\n    render() {\n        return (\n            <div>\n                \n              {\n                this.state.posts.map(item =>\n                  <div>\n                    \n                      <Card>\n                          <CardContent>\n                          <Tooltip title=\"Like\">\n                            <IconButton aria-label=\"like\">\n                              <ThumbUpAltIcon onClick={() => this.handleUpvote(item.key)}></ThumbUpAltIcon>  {item.votes}\n                          \n                            </IconButton>\n                          </Tooltip>\n                            \n                            <Typography>{item.content}</Typography>\n                          </CardContent>\n                          \n                          {item.messages.map(message => \n                            <div>{message}</div>\n                          )}\n\n                          <CardActions>\n                          {\n                            (item.key == this.state.currentPost)\n                            ?\n                              <div>\n                                <form onSubmit={this.handleSubmit}>\n                                  <TextField variant='outlined' label='response' name='message' value={this.state.message} onChange={this.handleChange} fullWidth/>\n                                  <Button type='submit' color='primary'>Send</Button>\n                                </form>\n                              </div>\n                            :\n                              <div>\n                                <Button onClick={() => this.handleRespond(item.key)}>RESPOND</Button>\n                              </div>\n                            \n                          }\n                          \n                            {/* <Typography>{item.votes}</Typography> */}\n                          </CardActions>\n                          \n                      </Card>\n                      <br />\n                  </div>\n              )}\n            </div>\n        )\n    } \n}\n\nexport default Post;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport './feed.styles.css';\nimport AddPost from '../../components/add-post/add-post.component';\nimport Post from '../../components/post/post.component';\n\nconst FeedPage = ({ currentUser }) => {\n\n    return (\n        <div>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    <br />\n                    <AddPost />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <br />\n                    <Post currentUser={currentUser}/>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default FeedPage;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SignInSignUpPage from './pages/sign-in-sign-up/sign-in-sign-up.component';\nimport Nav from './components/navigation/navigation.component';\nimport HomePage from './pages/home/home.component';\nimport ChatPage from './pages/chat/chat.component';\nimport FeedPage from './pages/feed/feed.component';\nimport { auth, createUser } from './firebase/firebase.utils';\n//import Particles from 'react-particles-js';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      currentUser: null\n    }\n  }\n\n  unsubscribeFromSession = null\n\n\n  componentDidMount() {\n    //on subscription, firebase oauth library is called\n    //takes in the user that signs in, and sets the currentUser object to the signed in user\n      this.unsubscribeFromSession = auth.onAuthStateChanged(async userAuth => {\n       \n        if (userAuth) {\n          const userReference = await createUser(userAuth);\n\n          userReference.onSnapshot(snapShotObj => {\n            this.setState({\n              currentUser: {\n                id: snapShotObj.id,\n                ...snapShotObj.data()\n              }\n            }, () => {\n              console.log(\"nothing\")\n            });\n            console.log(this.state)\n          });\n  \n        } else {\n          this.setState({ currentUser: userAuth });\n          console.log(userAuth);\n        }\n\n        // this.setState({\n        //   currentUser: user\n        // });\n      });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromSession();\n  }\n\n  render() {\n\n    const { currentUser } = this.state;\n    return (\n      <div>\n        <Nav currentUser={currentUser} />\n          <Switch>\n            <Route exact path='/' component={HomePage} />\n            <Route path='/signin' component={SignInSignUpPage} />\n            <Route path='/feed' render={(props) => <FeedPage {...props} currentUser={currentUser} />}/>\n            <Route path='/chat' render={(props) => <ChatPage {...props} currentUser={currentUser} />}/>\n          </Switch>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}